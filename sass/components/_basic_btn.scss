.basic-btn {
  /* these are pseudo-classes, note just one :, CSS keywords used for styling a specific state of
  the element that is affected by user action */
  &:link,
  :visited {
    border-radius: 10rem;
    display: inline-block;
    font-size: 2rem;
    padding: 0.5vmax 2vmax;
    position: relative;
    text-decoration: none;
    text-transform: uppercase;
    transition: all 0.2s;
  }
  &:hover {
    /* offset-x offset-y blur-radius rgba(color r,g,b, opacity) */
    box-shadow: 0 1rem 3rem rgba($color-black, 0.3);
    transform: translateY(-4%);
  }
  &:active {
    box-shadow: 0 0.3rem 0.8rem rgba($color-black, 0.3);
    transform: translateY(-2%);
  }
  &__solid {
    background-color: $color-light;
    color: $color-sakura;
  }
  &__white {
    background-color: $color-white;
    color: $color-card-earth;
    font-weight: 500;
  }
  &__earth {
    background-color: $color-text;
    color: $color-white;
    font-weight: 500;
  }
  /* This is an pseudo-element, note the two ::, a CSS keyword used for styling a specific part of the
    element, and can be independent of user action...in this case, however, we are adding style to the button
    that occurs after click; the "after" in the element, refers to the fact that it is the last child of the element,
    so it is the last thing to happen (e.g. happens after all other .btn styling) */
  &::after {
    /* in this pseudo-element, 'after', we are required to use content and display...we don't have any content
    requirement, so we leave it as empty with empty quotes */
    border-radius: 10rem;
    content: "";
    display: inline-block;
    /* height and width are 100% because of this pseudo-element being a child of .btn...we use 100% because we don't
      want to change the button's height or width */
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    transition: all 0.4s;
    width: 100%;
    z-index: -1;
  }
  &__solid::after {
    background-color: $color-light;
  }
  &:hover::after {
    transform: scaleX(1.1) scaleY(1.3);
    opacity: 0;
  }
  &__animated {
    animation: moveInBottom 1s ease-out 0.75s;
    animation-fill-mode: backwards;
  }
}
